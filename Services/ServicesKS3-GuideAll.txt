#1- Ejecutar POD NGINX

nano nginx-pod.yaml

apiVersion: v1
kind: Pod
metadata:
 name: nginx-pod
 labels:
   app: nginx
spec:
 containers:
   - name: nginx
     image: nginx:1.14.2
     ports:
       - containerPort: 80



//aplicar
kubectl apply -f nginx-pod.yaml

//verificar pod
kubectl get pods

#Servicios 


2- Exponer con servicios

	#ClusterIP acceso solo interno

//crear archivo
nano nginx-service.yaml

apiVersion: v1
kind: Service
metadata:
 name: nginx-service
spec:
 selector:
   app: nginx
 ports:
   - protocol: TCP
     port: 80
     targetPort: 80
 type: ClusterIP

//aplicar
kubectl apply -f nginx-service.yaml

//varificar lista de servicios en todos los espacios
kubectl get services --all-namespaces


	#NodeIp //Acceso interno,externo

//crear archivo
nano nginx-nodeport-service.yaml

//Service
apiVersion: v1
kind: Service
metadata:
 name: nginx-nodeport-service
spec:
 selector:
  app: nginx
 ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30080
 type: NodePort

//aplicar
kubectl apply -f nginx-nodeport-service.yaml


//check
kubectl get services --all-namespaces


		
	#LoadBalancer //Acceso externo, interno

//Archivo
nano nginx-service.yaml

//service

apiVersion: v1
kind: Service
metadata:
 name: nginx-service
spec:
 selector:
  app: nginx
 ports:
  - protocol: TCP
    port: 80
    targetPort: 80
 type: LoadBalancer
 
//aplicar
kubectl apply -f nginx-service.yaml

	#ExternalAlias //Dentro de la misma red

//crear
nano my-service.yaml


//service
apiVersion: v1
kind: Service
metadata:
 name: my-service
spec:
 type: ExternalName
 externalName: my.database.example.com

//aplicar
kubectl apply -f my-service.yaml

//Invocar desde un pod
apiVersion: v1
kind: Pod
metadata:
 name: my-pod
spec:
 containers:
 - name: my-container
   image: my-image
   env:
   - name: DATABASE_URL
     value: jdbc:mysql://my-service/mydb


	#INGRESS

//servicio

nano nginx-ingress.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: nginx-ingress
spec:
 rules:
 - http:
     paths:
     - pathType: Prefix
       path: "/"
       backend:
         service:
           name: nginx-service
           port:
             number: 80

//aplicar
kubectl apply -f nginx-ingress.yaml

//check
kubectl get ingress












